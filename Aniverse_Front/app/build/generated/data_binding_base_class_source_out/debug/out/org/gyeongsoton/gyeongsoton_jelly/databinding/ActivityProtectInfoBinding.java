// Generated by view binder compiler. Do not edit!
package org.gyeongsoton.gyeongsoton_jelly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.gyeongsoton.gyeongsoton_jelly.R;

public final class ActivityProtectInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView Vacci;

  @NonNull
  public final TextView adoptcondition;

  @NonNull
  public final TextView age;

  @NonNull
  public final TextView animalInformation;

  @NonNull
  public final TextView animalfind;

  @NonNull
  public final TextView animalintro;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final TextView centerImformation;

  @NonNull
  public final TextView centeraddress;

  @NonNull
  public final TextView centername;

  @NonNull
  public final TextView centerphoneNum;

  @NonNull
  public final TextView dises;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final ImageView img;

  @NonNull
  public final TextView protectTerm;

  @NonNull
  public final Button requestBtn;

  @NonNull
  public final TextView speciesGenderNeu;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView weight;

  private ActivityProtectInfoBinding(@NonNull RelativeLayout rootView, @NonNull TextView Vacci,
      @NonNull TextView adoptcondition, @NonNull TextView age, @NonNull TextView animalInformation,
      @NonNull TextView animalfind, @NonNull TextView animalintro, @NonNull ImageButton backBtn,
      @NonNull TextView centerImformation, @NonNull TextView centeraddress,
      @NonNull TextView centername, @NonNull TextView centerphoneNum, @NonNull TextView dises,
      @NonNull FrameLayout frameLayout, @NonNull ImageView img, @NonNull TextView protectTerm,
      @NonNull Button requestBtn, @NonNull TextView speciesGenderNeu, @NonNull TextView textView,
      @NonNull TextView weight) {
    this.rootView = rootView;
    this.Vacci = Vacci;
    this.adoptcondition = adoptcondition;
    this.age = age;
    this.animalInformation = animalInformation;
    this.animalfind = animalfind;
    this.animalintro = animalintro;
    this.backBtn = backBtn;
    this.centerImformation = centerImformation;
    this.centeraddress = centeraddress;
    this.centername = centername;
    this.centerphoneNum = centerphoneNum;
    this.dises = dises;
    this.frameLayout = frameLayout;
    this.img = img;
    this.protectTerm = protectTerm;
    this.requestBtn = requestBtn;
    this.speciesGenderNeu = speciesGenderNeu;
    this.textView = textView;
    this.weight = weight;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProtectInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProtectInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_protect_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProtectInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Vacci;
      TextView Vacci = ViewBindings.findChildViewById(rootView, id);
      if (Vacci == null) {
        break missingId;
      }

      id = R.id.adoptcondition;
      TextView adoptcondition = ViewBindings.findChildViewById(rootView, id);
      if (adoptcondition == null) {
        break missingId;
      }

      id = R.id.age;
      TextView age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.animal_information;
      TextView animalInformation = ViewBindings.findChildViewById(rootView, id);
      if (animalInformation == null) {
        break missingId;
      }

      id = R.id.animalfind;
      TextView animalfind = ViewBindings.findChildViewById(rootView, id);
      if (animalfind == null) {
        break missingId;
      }

      id = R.id.animalintro;
      TextView animalintro = ViewBindings.findChildViewById(rootView, id);
      if (animalintro == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.center_imformation;
      TextView centerImformation = ViewBindings.findChildViewById(rootView, id);
      if (centerImformation == null) {
        break missingId;
      }

      id = R.id.centeraddress;
      TextView centeraddress = ViewBindings.findChildViewById(rootView, id);
      if (centeraddress == null) {
        break missingId;
      }

      id = R.id.centername;
      TextView centername = ViewBindings.findChildViewById(rootView, id);
      if (centername == null) {
        break missingId;
      }

      id = R.id.centerphoneNum;
      TextView centerphoneNum = ViewBindings.findChildViewById(rootView, id);
      if (centerphoneNum == null) {
        break missingId;
      }

      id = R.id.dises;
      TextView dises = ViewBindings.findChildViewById(rootView, id);
      if (dises == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.protect_term;
      TextView protectTerm = ViewBindings.findChildViewById(rootView, id);
      if (protectTerm == null) {
        break missingId;
      }

      id = R.id.request_btn;
      Button requestBtn = ViewBindings.findChildViewById(rootView, id);
      if (requestBtn == null) {
        break missingId;
      }

      id = R.id.species_gender_neu;
      TextView speciesGenderNeu = ViewBindings.findChildViewById(rootView, id);
      if (speciesGenderNeu == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.weight;
      TextView weight = ViewBindings.findChildViewById(rootView, id);
      if (weight == null) {
        break missingId;
      }

      return new ActivityProtectInfoBinding((RelativeLayout) rootView, Vacci, adoptcondition, age,
          animalInformation, animalfind, animalintro, backBtn, centerImformation, centeraddress,
          centername, centerphoneNum, dises, frameLayout, img, protectTerm, requestBtn,
          speciesGenderNeu, textView, weight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
